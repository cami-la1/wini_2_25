//---------------------------------------------------------------------------

#ifndef UCSListaH
#define UCSListaH
#include "Memoria\Umemoria.h"
#include <iostream>
#include <tchar.h>
#include <string>
#include <iomanip>
#include <Graphics.hpp>
//---------------------------------------------------------------------------
  using namespace std;
struct Nodo	{

int elemento;
int sig;

 }  ;
typedef int direccion;

class Lista{
	private:

    const string datoNL = "elemento,sig";
	const string elementNL = "->elemento";
	const string sigNL = "->sig";
	static const int MAX= 20;
	static const int NULO = -1;

	direccion PtrElementos;

	CSmemoria* Cmemoria;
	public: 	int longitud;
	Lista();
	Lista(CSmemoria* m);
	direccion fin();
	direccion primero();
	direccion siguiente(direccion d);
	direccion anterior(direccion d);
    direccion localiza(int tipoElemento);
	bool vacia();
	int recupera(direccion d);
	int getlongitud();
	int getPtr();
    int sumaIntercalada()
    void elimLista();
	void insertar(direccion d, int elemento);
	void inserta_primero(int elemento);
	void inserta_ultimo(int elemento);
	void suprime(direccion d);
	void modifica(direccion d, int elemento);
	void imprimir(TColor FormColor, TCanvas *Canvas);
	void imprimir2(TColor FormColor, TCanvas *Canvas,int posX,int posY )   ;
};
#endif
